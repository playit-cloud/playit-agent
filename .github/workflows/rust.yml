name: Build binaries

on:
  push:
    branches: [ master ]
  workflow_dispatch: 

env:
  CARGO_TERM_COLOR: always

jobs:
  release:
    if: ${{ endsWith(github.event.commits[0].message, '[release]') || github.event_name == 'workflow_dispatch' }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: |
        sudo apt-get install -y libc6-dev-i386 lib32gcc-10-dev gcc-10-aarch64-linux-gnu gcc-aarch64-linux-gnu
        sudo ln -s /usr/include/x86_64-linux-gnu/asm /usr/include/asm

        rustup target add x86_64-unknown-linux-gnu
        cargo rustc --verbose --release --target x86_64-unknown-linux-gnu --manifest-path=packages/agent_cli/Cargo.toml --bin agent -- -o x64-linux
        
        rustup target add i686-unknown-linux-gnu
        cargo rustc --verbose --release --target i686-unknown-linux-gnu --manifest-path=packages/agent_cli/Cargo.toml --bin agent -- -o x86-linux
        
        #rustup target add aarch64-unknown-linux-gnu
        #cargo rustc --verbose --release --target aarch64-unknown-linux-gnu --manifest-path=packages/agent_cli/Cargo.toml --bin agent -- -o arm64-linux
        
        sudo apt install -y mingw-w64
        rustup target add x86_64-pc-windows-gnu
        cargo rustc --verbose --release --target x86_64-pc-windows-gnu --manifest-path=packages/agent_cli/Cargo.toml --bin agent -- -o x64-windows.exe
      
    
    - name: Get Release Tag
      run: |
        cargo install toml-cli --verbose
        echo "::set-output name=TAG::v$(toml get packages/agent_cli/Cargo.toml package.version | tr -d \")"
      id: TAG

    - name: Release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: "{x64,x86,arm64}-{windows,linux}-*?(.exe)"
        tag: ${{ steps.TAG.outputs.TAG }}
        overwrite: true
        file_glob: true
